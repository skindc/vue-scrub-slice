{"version":3,"file":"vue-scrub-slice.min.js","sources":["../src/slice/range.js","../src/slice/ui.js","../src/ScrubSlice.vue"],"sourcesContent":["export function setValuesFromNewSliceStartPoint(percentage, state) {\n\n  //Ensure range boundaries do not exceed each other\n  const maximum = state.sliceMaximum,\n    minimum = Math.min(maximum, state.sliceMinimum),\n    sliceStartPoint = Math.min(state.totalLength - minimum, Math.floor((state.totalLength * percentage) / state.sliceSnap) * state.sliceSnap),\n    sliceLength = Math.min(maximum, Math.max(minimum, state.sliceEndValue - sliceStartPoint))\n\n  return {\n    ...state,\n    sliceStartValue: sliceStartPoint,\n    sliceEndValue: Math.max(sliceStartPoint + state.sliceMinimum, sliceStartPoint + sliceLength),\n    sliceLength: sliceLength,\n    sliceHeadValue: Math.min(sliceLength, state.sliceHeadValue)\n  }\n}\n\nexport function setValuesFromNewSliceEndPoint(percentage, state) {\n\n  //Ensure range boundaries do not exceed each other\n  const maximum = state.sliceMaximum,\n    minimum = Math.min(maximum, state.sliceMinimum),\n    sliceEndPoint = Math.max(minimum, Math.floor((state.totalLength * percentage) / state.sliceSnap) * state.sliceSnap),\n    sliceLength = Math.min(maximum, Math.max(minimum, sliceEndPoint - state.sliceStartValue)),\n    sliceStartValue = Math.min(sliceEndPoint - minimum, sliceEndPoint - sliceLength)\n\n  return {\n    ...state,\n    sliceStartValue: sliceStartValue,\n    sliceEndValue: sliceEndPoint,\n    sliceLength: sliceLength,\n    sliceHeadValue: Math.min(sliceLength, state.sliceHeadValue)\n  }\n}\n\nexport function setValuesFromNewSliceHeadPoint(percentage, state) {\n\n  //get play scrub handle position on bar\n  const headPoint = Math.floor((state.totalLength * percentage) / state.sliceHeadSnap) * state.sliceHeadSnap\n  let sliceHeadValue = Math.max(0, headPoint - state.sliceStartValue)\n  return {\n    ...state,\n    sliceHeadValue: Math.min(state.sliceStartValue + sliceHeadValue, state.sliceEndValue) - state.sliceStartValue\n  }\n}\n","import {\n  setValuesFromNewSliceStartPoint,\n  setValuesFromNewSliceEndPoint,\n  setValuesFromNewSliceHeadPoint\n}\nfrom './range'\n\nexport function getElementViewLeft(document, element) {\n  let actualLeft = element.offsetLeft,\n    current = element.offsetParent,\n    elementScrollLeft\n  while (current !== null) {\n    actualLeft += current.offsetLeft\n    current = current.offsetParent\n  }\n  elementScrollLeft = document.body.scrollLeft + document.documentElement.scrollLeft\n  return actualLeft - elementScrollLeft\n}\n\nexport function getThumbPercentagePosition(document, bar, element) {\n  const barWidth = bar.clientWidth\n  let percentage = (element.clientX - getElementViewLeft(document, bar)) / barWidth\n  percentage = percentage > 0 ? percentage : 0\n  percentage = percentage < 1 ? percentage : 1\n  return percentage\n}\n\nexport function setValuesForElementChange(e, percentage, state) {\n\n  const action = {\n    'vss-slice-start-handle': setValuesFromNewSliceStartPoint,\n    'vss-slice-end-handle': setValuesFromNewSliceEndPoint,\n    'vss-slice-head-handle': setValuesFromNewSliceHeadPoint\n  }[e.srcElement.className]\n\n  if (action) {\n    return action(percentage, state)\n  }\n  else {\n    return state\n  }\n}\n\nexport function setMouseDragTracking(document, bar, element, context, moveCallback, endCallback) {\n\n  let state = { ...context\n  }\n\n  var moveHandler = (e) => {\n      const percentage = getThumbPercentagePosition(document, bar, e)\n      state = setValuesForElementChange(element, percentage, state)\n      moveCallback({\n        state: { ...state\n        }\n      })\n    },\n    stopHandler = (e) => {\n      document.removeEventListener('mouseup', stopHandler)\n      document.removeEventListener('mousemove', moveHandler)\n      const percentage = getThumbPercentagePosition(document, bar, e)\n      //context.dragging = false;\n      state = setValuesForElementChange(element, percentage, state)\n      state.dragging = false\n      endCallback({\n        state: { ...state\n        }\n      })\n    }\n\n  state.dragging = true\n\n  moveCallback({\n    state: { ...state\n    }\n  })\n\n  document.addEventListener('mousemove', moveHandler)\n  document.addEventListener('mouseup', stopHandler)\n}\n\nexport function setTouchDragTracking(document, bar, element, context, moveCallback, endCallback) {\n\n  let state = { ...context\n  }\n\n  var moveHandler = (e) => {\n      const touch = e.changedTouches[0],\n        percentage = getThumbPercentagePosition(document, bar, touch)\n\n      state = setValuesForElementChange(element, percentage, context)\n      moveCallback({\n        state: { ...state\n        }\n      })\n    },\n\n    stopHandler = (e) => {\n      document.removeEventListener('touchend', stopHandler)\n      document.removeEventListener('touchmove', moveHandler)\n\n      const touch = e.changedTouches[0],\n        percentage = getThumbPercentagePosition(document, bar, touch)\n\n      state = setValuesForElementChange(element, percentage, state)\n      state.dragging = false\n      endCallback({\n        state: { ...state\n        }\n      })\n    }\n\n  state.dragging = true\n\n  moveCallback({\n    state: { ...state\n    }\n  })\n\n  document.addEventListener('touchmove', this.moveHandler)\n  document.addEventListener('touchend', this.stopHandler)\n}\n","<template>\n  <div\n    ref=\"controlContainer\"\n    @mousedown=\"onThumbMouseDown\"\n    @touchstart=\"onThumbTouchStart\"\n    class=\"vss-scrub\">\n\n    <div v-bind:class=\"{'media-slice-bar': true, 'dragging': dragging}\">\n      <div\n        class=\"vss-bar-whole\"\n      />\n      <div\n        class=\"vss-bar-slice\"\n        v-bind:style=\"{left: startPosition, width: clipWidth}\"/>\n      <div\n        v-if=\"!sliced\"\n        ref=\"sliceStartThumbclass\"\n        class=\"vss-slice-start-handle\"\n        v-bind:style=\"{left: startPosition}\"/>\n      <div\n        v-if=\"!sliced\"\n        ref=\"sliceEndThumbclass\"\n        class=\"vss-slice-end-handle\"\n        v-bind:style=\"{left: endPosition}\"/>\n      <div\n        ref=\"sliceHeadPositionThumbclass\"\n        class=\"vss-slice-head-handle\"\n        v-bind:style=\"{left: sliceHeadPosition}\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\n  import {setMouseDragTracking, setTouchDragTracking} from './slice'\n\n  export default {\n    props: {\n      totalLength: {\n        type: Number,\n        default: 1000\n      },\n      sliceMaximum: {\n        type: Number,\n        default: 500\n      },\n      sliceMinimum: {\n        type: Number,\n        default: 100\n      },\n      sliceSnap: {\n        type: Number,\n        default: 1\n      },\n      sliceHeadSnap: {\n        type: Number,\n        default: 1\n      }\n    },\n    data() {\n      return {\n        sliceStartValue: 0,\n        sliceStartPercent: 0,\n        sliceEndValue: Math.min(this.totalLength, this.sliceMaximum),\n        sliceEndPercent: this.sliceEndValue / this.totalLength,\n        sliceLength: Math.min(this.totalLength, this.sliceMaximum),\n        sliceHeadValue: 0,\n        dragging: false\n      }\n    },\n    computed: {\n      startPosition () {\n        return ((this.sliceStartValue / this.totalLength) * 100) + \"%\"\n      },\n      endPosition () {\n        return ((this.sliceEndValue / this.totalLength) * 100) + \"%\"\n      },\n      sliced () {\n        return this.actualSliceMinimum >= this.totalLength\n      },\n      clipWidth () {\n        return this.actualSliceMinimum >= this.totalLength ? '100%' : (((this.sliceEndValue - this.sliceStartValue) / this.totalLength) * 100) + \"%\"\n      },\n      sliceHeadPosition () {\n        return (((this.sliceStartValue + this.sliceHeadValue) / this.totalLength) * 100) + \"%\"\n      },\n      //Add safety to ranges for props\n      actualSliceMaximum () {\n        return Math.min(this.totalLength, this.sliceMaximum)\n      },\n      actualSliceMinimum () {\n        return Math.min(this.totalLength, this.sliceMinimum)\n      },\n      actualSliceSnap () {\n        return Math.min(this.totalLength, this.sliceSnap)\n      },\n      actualSliceHeadSnap () {\n        return Math.min(this.totalLength, this.sliceHeadSnap)\n      }\n    },\n    methods: {\n      getContext () {\n        return {\n          totalLength: this.totalLength,\n          sliceMaximum: this.actualSliceMaximum,\n          sliceMinimum: this.actualSliceMinimum,\n          sliceLength: this.sliceLength,\n          sliceSnap: this.actualSliceSnap,\n          sliceStartValue: this.sliceStartValue,\n          sliceStartPercent: this.sliceStartPercent,\n          sliceEndValue: this.sliceEndValue,\n          sliceEndPercent: this.sliceEndPercent,\n          sliceHeadValue: this.sliceHeadValue,\n          sliceHeadSnap: this.actualSliceHeadSnap\n        }\n      },\n      onThumbMouseDown (e) {\n        setMouseDragTracking(document, this.$refs.controlContainer, e, this.getContext(), this.onDrag, this.onDragStop)\n        this.$emit('dragbegin')\n      },\n      onThumbTouchStart (e) {\n        setTouchDragTracking(document, this.$refs.controlContainer, e, this.getContext(), this.onDrag, this.onDragStop)\n        this.$emit('dragbegin')\n      },\n      onDrag(e) {\n        //Detect if has event listener\n        //if so emit event rather than set model\n        this.sliceStartValue = e.state.sliceStartValue\n        this.sliceEndValue = e.state.sliceEndValue\n        this.sliceLength = e.state.sliceLength\n        this.dragging = e.state.dragging\n        this.sliceHeadValue = e.state.sliceHeadValue\n        this.$emit('drag')\n      },\n      onDragStop (e) {\n        //Detect if has event listener\n        //if so emit event rather than set model\n        this.sliceStartValue = e.state.sliceStartValue\n        this.sliceEndValue = e.state.sliceEndValue\n        this.sliceLength = e.state.sliceLength\n        this.dragging = e.state.dragging\n        this.sliceHeadValue = e.state.sliceHeadValue\n        this.$emit('dragend')\n        this.$emit('change', {...e.state})\n      }\n    },\n\n    /**\n     * Install ScrubSlice components.\n     * @param {Vue} Vue\n     * @param {{ name: string }} [options]\n     */\n    install (Vue, { name = 'scrub-slice' } = {}) {\n      Vue.component(name, this)\n    }\n  }\n\n</script>\n\n<style lang='scss'>\n\n  .vss-slice-start-handle {\n    position: absolute;\n    width: 0.5em;\n    height: 1em;\n    &:after {\n      content: \"\";\n      position: absolute;\n      width: .5em;\n      height: 1em;\n      border-bottom-left-radius: 1em;\n      background: #DDD;\n      cursor: pointer;\n      left: -.5em;\n      top: 1em;\n    }\n    &:before {\n      content: \"\";\n      position: absolute;\n      width:1px;\n      height: 2em;\n      background: #DDD;\n      left: 0;\n\n    }\n  }\n\n  .vss-slice-end-handle {\n    position: absolute;\n    width: 0.5em;\n    height: 1em;\n    &:after {\n      content: \"\";\n      position: absolute;\n      width: .5em;\n      height: 1em;\n      border-bottom-right-radius: 1em;\n      background: #DDD;\n      cursor: pointer;\n      left: 0;\n      top: 1em;\n    }\n    &:before {\n      content: \"\";\n      position: absolute;\n      width:1px;\n      height: 2em;\n      background: #DDD;\n      left: 0;\n\n    }\n  }\n\n  .vss-slice-head-handle {\n    position: absolute;\n    width: 1em;\n    height: 1em;\n    &:after {\n      content: \"\";\n      position: absolute;\n      width: .5em;\n      height: 1em;\n      background: #CFC;\n      cursor: pointer;\n      left: -.25em;\n      top: 0;\n    }\n    &:before {\n      content: \"\";\n      position: absolute;\n      width:1px;\n      height: 2em;\n      background: #CFC;\n      left: 0;\n\n    }\n  }\n\n  .media-slice-bar{\n    position: relative;\n    width: 100%;\n    &.dragging {\n      cursor: pointer;\n    }\n  }\n\n  .vss-bar-slice{\n    position:absolute;\n    height: 2px;\n    top: 50%;\n    background: #CFC;\n  }\n\n  .vss-bar-whole{\n    position:absolute;\n    width: 100%;\n    height: 2px;\n    top: 50%;\n    background: #CCC;\n  }\n\n  .tb-ma-controller {\n    width: 100%;\n    min-height: 50px;\n    display: flex;\n    flex-flow: column;\n    padding: 10px;\n  }\n\n  .vss-scrub {\n    display: flex;\n    min-height: 2em;\n    margin: 10px;\n  }\n\n</style>\n"],"names":["setValuesFromNewSliceStartPoint","percentage","state","maximum","sliceMaximum","minimum","Math","min","sliceMinimum","sliceStartPoint","totalLength","floor","sliceSnap","sliceLength","max","sliceEndValue","sliceHeadValue","setValuesFromNewSliceEndPoint","sliceEndPoint","sliceStartValue","setValuesFromNewSliceHeadPoint","headPoint","sliceHeadSnap","getThumbPercentagePosition","document","bar","element","barWidth","clientWidth","clientX","actualLeft","offsetLeft","current","offsetParent","body","scrollLeft","documentElement","getElementViewLeft","setValuesForElementChange","e","action","srcElement","className","Number","this","actualSliceMinimum","actualSliceMaximum","actualSliceSnap","sliceStartPercent","sliceEndPercent","actualSliceHeadSnap","context","moveCallback","endCallback","moveHandler","dragging","addEventListener","stopHandler","removeEventListener","$refs","controlContainer","getContext","onDrag","onDragStop","$emit","Vue","name","component"],"mappings":"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"}